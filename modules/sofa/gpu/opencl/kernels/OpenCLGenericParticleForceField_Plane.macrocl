<MACRO all>
__METHODNAME(){_Plane}
</MACRO>

<MACRO float>
_TYPES_()
{
	typedef float Real;
	typedef float4 Real4;
	typedef float IDATA_TYPE;
}
</MACRO>

<MACRO double>
_TYPES_()
{
	#pragma OPENCL EXTENSION cl_khr_fp64: enable
	typedef double Real;
	typedef double4 Real4;
	typedef double IDATA_TYPE;
}
</MACRO>

<MACRO all>
_DEF_()
{
//	#define BSIZE 32
}
</MACRO>

<MACRO all>
__INPUTS_AddForce__()
{
	Real4 planeNormal,
	Real4 planeData
}
</MACRO>

<MACRO all>
__INPUTS_AddDForce__()
{
		Real4 planeNormal,
		Real planeStiffness
}
</MACRO>

<MACRO all>
__OP_AddForce__()
{
	Real d = dot(xi,planeNormal)-planeData.s0;	//dot(xi,planeNormal)-planeD
	IDATA_NAME = d;

	if (d<0)
	{
		Real forceIntensity =  -planeData.s1*d;		// -planeStiffness*d;
		Real dampingIntensity = -planeData.s2*d;	// -planeDamping*d;
		force = planeNormal*forceIntensity - vi*dampingIntensity;
	}
}
</MACRO>


<MACRO all>
__OP_AddDForce__()
{
	Real d = IDATA_NAME;
	if(d<0)
	{
		dforce = planeNormal * (-planeStiffness * dot(dxi, planeNormal));
	}
}
</MACRO>





